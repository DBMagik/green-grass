@page "/clients"
@rendermode InteractiveServer
@using GreenGrass.Models
@using GreenGrass.Services
@using Microsoft.Identity.Client
@inject IClientService ClientService
@inject NavigationManager Navigation

<PageTitle>Clients - GreenGrass</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Clients</h1>
    <p>
        <button class="btn btn-primary" @onclick="AddNewClient">Add New Client</button>
    </p>
</div>

@if (_clients == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (!_clients.Any())
{
    <div class="alert alert-info">
        <h4>No clients found</h4>
        <p>Start by adding your first client to begin managing your lawncare business.</p>
    </div>
}
else
{
    <div class="row">
        @foreach (var client in _clients)
        {
            <div class="col-md-6 col-lg-4 mb-3">
                <div class="card h-100 client-card" style="cursor: pointer;" @onclick="@(() => Navigation.NavigateTo($"/clients/{client.Id}"))">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title mb-0">@client.FullName</h5>
                            <span class="badge bg-@(client.IsActive ? "success" : "secondary")">
                                @(client.IsActive ? "Active" : "Inactive")
                            </span>
                        </div>
                        <p class="card-text">
                            <i class="bi bi-envelope"></i> @client.Email<br>
                            <i class="bi bi-telephone"></i> @client.PhoneNumber<br>
                            <i class="bi bi-geo-alt"></i> @client.Address.FullAddress
                        </p>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                @client.ServiceHistory.Count service(s)
                                @if (client.ServiceHistory.Any())
                                {
                                    <br>
                                    <span class="text-success">$@client.ServiceHistory.Where(s => s.PaymentStatus == PaymentStatus.Paid).Sum(s => s.Amount).ToString("F2") total</span>
                                }
                            </small>
                            <div class="btn-group" role="group" @onclick:stopPropagation="true">
                                <button class="btn btn-sm btn-outline-primary" 
                                        @onclick="@(() => Navigation.NavigateTo($"/clients/{client.Id}"))">
                                    <i class="bi bi-eye"></i> View
                                </button>
                                <button class="btn btn-sm btn-outline-secondary" 
                                        @onclick="@(() => Navigation.NavigateTo($"/clients/{client.Id}/edit"))">
                                    <i class="bi bi-pencil"></i> Edit
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Client>? _clients;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // I suspect the error is happening on the next line.
            _clients = await ClientService.GetAllClientsAsync();
        }
        catch (Exception ex)
        {
            // This will print the hidden error to your application's console.
            Console.WriteLine("!!!!!!!!!! EXCEPTION IN OnInitializedAsync !!!!!!!!!!");
            Console.WriteLine(ex);
            // Initialize _clients to an empty list so the page can still render.
            _clients = new List<Client>();
        }
    }
    
    private void AddNewClient()
    {
        // This should now work correctly
        Navigation.NavigateTo("/clients/new");
    }

}